<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:spring-mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd ">
  	<!-- 配置属性资源文件 -->
  	<!-- 配置属性资源文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"
		system-properties-mode="NEVER" />
   <!-- 自动扫描 -->
	<context:annotation-config />
	<context:component-scan base-package="com.ssm" />
	 	<!-- 配置连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="url" value="${datasource.url}" />
		<property name="maxActive" value="${datasource.maxactive}" />
		<property name="initialSize" value="${datasource.initialsize}" />
		<property name="maxWait" value="${datasource.maxwait}" />
		<property name="minIdle" value="${datasource.minidle}" />
		<property name="poolPreparedStatements" value="${datasource.poolpreparedstatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${datasource.maxpoolpreparedstatementperconnectionsize}" />
	</bean>

	<!-- 配置mybatis sqlsessionfactory -->

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 配置数据源 -->
		<property name="dataSource" ref="dataSource" />
			<!-- <property name="mapperLocations" value="classpath:com/ssm/mapper/*.xml" /> -->
 <property name="mapperLocations">
            <list>
                <value>classpath:/mybatis/*Mapper.xml</value>
            </list>
        </property>
	<!-- 	<property name="mapperLocations"
			value="classpath*:com/ssm/mapper/*Mapper.xml" /> -->
		<!-- 配置需要取类型别名的包名; -->
		<property name="typeAliasesPackage" value="com.ssm.model" />
		<!-- mybatis框架特殊一些配置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>


	<!-- 配置自动mapper映射 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ssm.mapper" />
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- aop应用事务管理 -->
<!-- 	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(* com.cc.p2p.base.service..*Service.*(..))"
			id="coreServicePointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="coreServicePointcut" />
	</aop:config> -->
	
</beans>